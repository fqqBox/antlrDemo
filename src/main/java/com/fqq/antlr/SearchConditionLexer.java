// Generated from C:/Users/xc/Desktop/workspace/antlrDemo/src/main/java/com/fqq/antlr/SearchCondition.g4 by ANTLR 4.13.2
package com.fqq.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SearchConditionLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		OPERATOR=1, AND=2, OR=3, LPAREN=4, RPAREN=5, IDENTIFIER=6, STRING=7, NUMBER=8, 
		WS=9;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"OPERATOR", "AND", "OR", "LPAREN", "RPAREN", "IDENTIFIER", "STRING", 
			"NUMBER", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'AND'", "'OR'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "OPERATOR", "AND", "OR", "LPAREN", "RPAREN", "IDENTIFIER", "STRING", 
			"NUMBER", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SearchConditionLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SearchCondition.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\t\u00c3\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0003\u0000\u008a\b\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0005\u0005\u0099\b\u0005\n"+
		"\u0005\f\u0005\u009c\t\u0005\u0001\u0006\u0001\u0006\u0005\u0006\u00a0"+
		"\b\u0006\n\u0006\f\u0006\u00a3\t\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0005\u0006\u00a8\b\u0006\n\u0006\f\u0006\u00ab\t\u0006\u0001\u0006\u0003"+
		"\u0006\u00ae\b\u0006\u0001\u0007\u0004\u0007\u00b1\b\u0007\u000b\u0007"+
		"\f\u0007\u00b2\u0001\u0007\u0001\u0007\u0004\u0007\u00b7\b\u0007\u000b"+
		"\u0007\f\u0007\u00b8\u0003\u0007\u00bb\b\u0007\u0001\b\u0004\b\u00be\b"+
		"\b\u000b\b\f\b\u00bf\u0001\b\u0001\b\u0000\u0000\t\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0001"+
		"\u0000\u0006\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u0000\"\"\u0001"+
		"\u0000\'\'\u0001\u000009\u0003\u0000\t\n\r\r  \u00d4\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0001\u0089\u0001\u0000\u0000\u0000\u0003\u008b\u0001\u0000\u0000"+
		"\u0000\u0005\u008f\u0001\u0000\u0000\u0000\u0007\u0092\u0001\u0000\u0000"+
		"\u0000\t\u0094\u0001\u0000\u0000\u0000\u000b\u0096\u0001\u0000\u0000\u0000"+
		"\r\u00ad\u0001\u0000\u0000\u0000\u000f\u00b0\u0001\u0000\u0000\u0000\u0011"+
		"\u00bd\u0001\u0000\u0000\u0000\u0013\u0014\u0005G\u0000\u0000\u0014\u0015"+
		"\u0005r\u0000\u0000\u0015\u0016\u0005e\u0000\u0000\u0016\u0017\u0005a"+
		"\u0000\u0000\u0017\u0018\u0005t\u0000\u0000\u0018\u0019\u0005e\u0000\u0000"+
		"\u0019\u001a\u0005r\u0000\u0000\u001a\u001b\u0005T\u0000\u0000\u001b\u001c"+
		"\u0005h\u0000\u0000\u001c\u001d\u0005a\u0000\u0000\u001d\u008a\u0005n"+
		"\u0000\u0000\u001e\u001f\u0005L\u0000\u0000\u001f \u0005e\u0000\u0000"+
		" !\u0005s\u0000\u0000!\"\u0005s\u0000\u0000\"#\u0005T\u0000\u0000#$\u0005"+
		"h\u0000\u0000$%\u0005a\u0000\u0000%\u008a\u0005n\u0000\u0000&\'\u0005"+
		"E\u0000\u0000\'(\u0005q\u0000\u0000()\u0005u\u0000\u0000)*\u0005a\u0000"+
		"\u0000*\u008a\u0005l\u0000\u0000+,\u0005C\u0000\u0000,-\u0005o\u0000\u0000"+
		"-.\u0005n\u0000\u0000./\u0005t\u0000\u0000/0\u0005a\u0000\u000001\u0005"+
		"i\u0000\u000012\u0005n\u0000\u00002\u008a\u0005s\u0000\u000034\u0005N"+
		"\u0000\u000045\u0005o\u0000\u000056\u0005t\u0000\u000067\u0005C\u0000"+
		"\u000078\u0005o\u0000\u000089\u0005n\u0000\u00009:\u0005t\u0000\u0000"+
		":;\u0005a\u0000\u0000;<\u0005i\u0000\u0000<=\u0005n\u0000\u0000=\u008a"+
		"\u0005s\u0000\u0000>?\u0005S\u0000\u0000?@\u0005t\u0000\u0000@A\u0005"+
		"a\u0000\u0000AB\u0005r\u0000\u0000BC\u0005t\u0000\u0000CD\u0005s\u0000"+
		"\u0000DE\u0005W\u0000\u0000EF\u0005i\u0000\u0000FG\u0005t\u0000\u0000"+
		"G\u008a\u0005h\u0000\u0000HI\u0005N\u0000\u0000IJ\u0005o\u0000\u0000J"+
		"K\u0005t\u0000\u0000KL\u0005S\u0000\u0000LM\u0005t\u0000\u0000MN\u0005"+
		"a\u0000\u0000NO\u0005r\u0000\u0000OP\u0005t\u0000\u0000PQ\u0005s\u0000"+
		"\u0000QR\u0005W\u0000\u0000RS\u0005i\u0000\u0000ST\u0005t\u0000\u0000"+
		"T\u008a\u0005h\u0000\u0000UV\u0005E\u0000\u0000VW\u0005n\u0000\u0000W"+
		"X\u0005d\u0000\u0000XY\u0005s\u0000\u0000YZ\u0005W\u0000\u0000Z[\u0005"+
		"i\u0000\u0000[\\\u0005t\u0000\u0000\\\u008a\u0005h\u0000\u0000]^\u0005"+
		"N\u0000\u0000^_\u0005o\u0000\u0000_`\u0005t\u0000\u0000`a\u0005E\u0000"+
		"\u0000ab\u0005n\u0000\u0000bc\u0005d\u0000\u0000cd\u0005s\u0000\u0000"+
		"de\u0005W\u0000\u0000ef\u0005i\u0000\u0000fg\u0005t\u0000\u0000g\u008a"+
		"\u0005h\u0000\u0000hi\u0005G\u0000\u0000ij\u0005r\u0000\u0000jk\u0005"+
		"e\u0000\u0000kl\u0005a\u0000\u0000lm\u0005t\u0000\u0000mn\u0005e\u0000"+
		"\u0000no\u0005r\u0000\u0000op\u0005T\u0000\u0000pq\u0005h\u0000\u0000"+
		"qr\u0005a\u0000\u0000rs\u0005n\u0000\u0000st\u0005O\u0000\u0000tu\u0005"+
		"r\u0000\u0000uv\u0005E\u0000\u0000vw\u0005q\u0000\u0000wx\u0005u\u0000"+
		"\u0000xy\u0005a\u0000\u0000y\u008a\u0005l\u0000\u0000z{\u0005L\u0000\u0000"+
		"{|\u0005e\u0000\u0000|}\u0005s\u0000\u0000}~\u0005s\u0000\u0000~\u007f"+
		"\u0005T\u0000\u0000\u007f\u0080\u0005h\u0000\u0000\u0080\u0081\u0005a"+
		"\u0000\u0000\u0081\u0082\u0005n\u0000\u0000\u0082\u0083\u0005O\u0000\u0000"+
		"\u0083\u0084\u0005r\u0000\u0000\u0084\u0085\u0005E\u0000\u0000\u0085\u0086"+
		"\u0005q\u0000\u0000\u0086\u0087\u0005u\u0000\u0000\u0087\u0088\u0005a"+
		"\u0000\u0000\u0088\u008a\u0005l\u0000\u0000\u0089\u0013\u0001\u0000\u0000"+
		"\u0000\u0089\u001e\u0001\u0000\u0000\u0000\u0089&\u0001\u0000\u0000\u0000"+
		"\u0089+\u0001\u0000\u0000\u0000\u00893\u0001\u0000\u0000\u0000\u0089>"+
		"\u0001\u0000\u0000\u0000\u0089H\u0001\u0000\u0000\u0000\u0089U\u0001\u0000"+
		"\u0000\u0000\u0089]\u0001\u0000\u0000\u0000\u0089h\u0001\u0000\u0000\u0000"+
		"\u0089z\u0001\u0000\u0000\u0000\u008a\u0002\u0001\u0000\u0000\u0000\u008b"+
		"\u008c\u0005A\u0000\u0000\u008c\u008d\u0005N\u0000\u0000\u008d\u008e\u0005"+
		"D\u0000\u0000\u008e\u0004\u0001\u0000\u0000\u0000\u008f\u0090\u0005O\u0000"+
		"\u0000\u0090\u0091\u0005R\u0000\u0000\u0091\u0006\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0005(\u0000\u0000\u0093\b\u0001\u0000\u0000\u0000\u0094"+
		"\u0095\u0005)\u0000\u0000\u0095\n\u0001\u0000\u0000\u0000\u0096\u009a"+
		"\u0007\u0000\u0000\u0000\u0097\u0099\u0007\u0001\u0000\u0000\u0098\u0097"+
		"\u0001\u0000\u0000\u0000\u0099\u009c\u0001\u0000\u0000\u0000\u009a\u0098"+
		"\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000\u0000\u0000\u009b\f\u0001"+
		"\u0000\u0000\u0000\u009c\u009a\u0001\u0000\u0000\u0000\u009d\u00a1\u0005"+
		"\"\u0000\u0000\u009e\u00a0\b\u0002\u0000\u0000\u009f\u009e\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a3\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000\u00a2\u00a4\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a4\u00ae\u0005\"\u0000"+
		"\u0000\u00a5\u00a9\u0005\'\u0000\u0000\u00a6\u00a8\b\u0003\u0000\u0000"+
		"\u00a7\u00a6\u0001\u0000\u0000\u0000\u00a8\u00ab\u0001\u0000\u0000\u0000"+
		"\u00a9\u00a7\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ac\u0001\u0000\u0000\u0000\u00ab\u00a9\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ae\u0005\'\u0000\u0000\u00ad\u009d\u0001\u0000\u0000\u0000\u00ad"+
		"\u00a5\u0001\u0000\u0000\u0000\u00ae\u000e\u0001\u0000\u0000\u0000\u00af"+
		"\u00b1\u0007\u0004\u0000\u0000\u00b0\u00af\u0001\u0000\u0000\u0000\u00b1"+
		"\u00b2\u0001\u0000\u0000\u0000\u00b2\u00b0\u0001\u0000\u0000\u0000\u00b2"+
		"\u00b3\u0001\u0000\u0000\u0000\u00b3\u00ba\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b6\u0005.\u0000\u0000\u00b5\u00b7\u0007\u0004\u0000\u0000\u00b6\u00b5"+
		"\u0001\u0000\u0000\u0000\u00b7\u00b8\u0001\u0000\u0000\u0000\u00b8\u00b6"+
		"\u0001\u0000\u0000\u0000\u00b8\u00b9\u0001\u0000\u0000\u0000\u00b9\u00bb"+
		"\u0001\u0000\u0000\u0000\u00ba\u00b4\u0001\u0000\u0000\u0000\u00ba\u00bb"+
		"\u0001\u0000\u0000\u0000\u00bb\u0010\u0001\u0000\u0000\u0000\u00bc\u00be"+
		"\u0007\u0005\u0000\u0000\u00bd\u00bc\u0001\u0000\u0000\u0000\u00be\u00bf"+
		"\u0001\u0000\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00bf\u00c0"+
		"\u0001\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1\u00c2"+
		"\u0006\b\u0000\u0000\u00c2\u0012\u0001\u0000\u0000\u0000\n\u0000\u0089"+
		"\u009a\u00a1\u00a9\u00ad\u00b2\u00b8\u00ba\u00bf\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}